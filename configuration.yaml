# Loads default set of integrations. Do not remove.
default_config:

lovelace:
  mode: storage
  dashboards:
    tjukktommern-dashboard:
      mode: yaml
      filename: lovelace/hytte/tjukktommern.yaml
      title: Tjukktømmern

# Load frontend themes from the themes folder
frontend:
  themes: !include_dir_merge_named themes

automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

logger:
  default: warning
  logs:
    homeassistant.components.google_assistant_sdk: debug
    homeassistant.components.application_credentials: debug
    aiohttp.client: debug

http:
  use_x_forwarded_for: true
  trusted_proxies:
    - 127.0.0.1

homeassistant:
  packages: !include_dir_named packages

# --------------------------- TEMPLATE-SENSORER ---------------------------
template:
  # --- Systemversjoner ---
  - sensor:
      - name: "HA Core versjon"
        unique_id: ha_core_version
        icon: mdi:home-assistant
        state: >
          {{ state_attr('update.home_assistant_core_update', 'installed_version') or 'ukjent' }}

      - name: "HA Supervisor versjon"
        unique_id: ha_supervisor_version
        icon: mdi:server
        state: >
          {{ state_attr('update.home_assistant_supervisor_update', 'installed_version') or 'ukjent' }}

      - name: "HA OS versjon"
        unique_id: ha_os_version
        icon: mdi:chip
        state: >
          {{ state_attr('update.home_assistant_operating_system_update', 'installed_version') or 'ukjent' }}

  # --- Uptime i dager ---
  - sensor:
      - name: "HA Uptime (dager)"
        state: >
          {% set t = states('sensor.ha_uptime') | float(0) %}
          {{ (t / 24) | round(1) }} d

  # --- Korrigerte ute-kilder + virtuelle sensorer (uten heartbeat) ---
  - sensor:
      - name: "Ute Netatmo (korr)"
        unique_id: ute_netatmo_corr
        unit_of_measurement: "°C"
        device_class: temperature
        state_class: measurement
        state: >
          {% set s = states('sensor.tjukktommern_inne_tjukktommern_ute_temperatur') %}
          {% set v = s | float if s | is_number else none %}

          {% set off = states('input_number.ute_offset_netatmo') | float(0) %}
          {{ (v + off) if v == v else 'unknown' }}

      - name: "Ute Daikin (korr)"
        unique_id: ute_daikin_corr
        unit_of_measurement: "°C"
        device_class: temperature
        state_class: measurement
        state: >
          {% set raw = states('sensor.daikinap86694_climatecontrol_outdoor_temperature') %}
          {% set off = states('input_number.ute_offset_daikin') | float(0) %}
          {% if raw | is_number %}
            {{ (raw | float + off) | round(1) }}
          {% else %}
            unknown
          {% endif %}
        availability: >
          {{ states('sensor.daikinap86694_climatecontrol_outdoor_temperature') | is_number }}

      - name: "Ute temperatur (virtuell)"
        unique_id: ute_temp_virtual
        unit_of_measurement: "°C"
        device_class: temperature
        state_class: measurement
        availability: >
          {{ has_value('sensor.ute_netatmo_korr') }}
        state: >
          {% set s = states('sensor.ute_netatmo_korr') %}
          {{ s|float if s|is_number else none }}

      - name: "Stue temperatur (virtuell)"
        unique_id: stue_temp_virtual
        unit_of_measurement: "°C"
        device_class: temperature
        state_class: measurement
        availability: >
          {{ has_value('sensor.tjukktommern_inne_temperatur')
              and has_value('sensor.tjukktommern_motion_sensor_temperatur') }}
        state: >
          {# Råverdier #}
          {% set net_s = states('sensor.tjukktommern_inne_temperatur') %}
          {% set sens_s = states('sensor.tjukktommern_motion_sensor_temperatur') %}

          {% set netatmo_raw = net_s|float if net_s|is_number else none %}
          {% set sensibo_raw = sens_s|float if sens_s|is_number else none %}

          {# Glattet STATE fra statistics; fall tilbake til rå #}
          {% set netatmo = states('sensor.stue_netatmo_30_min_snitt') | float(default=netatmo_raw) %}
          {% set sensibo = states('sensor.stue_sensibo_30_min_snitt') | float(default=sensibo_raw) %}

          {# Outlier-vern #}
          {% set diff = (netatmo - sensibo) | abs %}

          {# Kontekst (sol og fyring) #}
          {% set sun_elev = state_attr('sun.sun','elevation') | float(-90) %}
          {% set hour = now().hour %}
          {% set morning_sun = (7 <= hour <= 11) and (sun_elev > 5) %}
          {% set slope = states('sensor.stue_sensibo_stigningshastighet') | float(0) %}
          {% set early_fire = slope >= 1.0 %}

          {# Basis-vekter #}
          {% set w_netatmo = 0.35 %}
          {% set w_sensibo = 0.65 %}

          {# Justeringer #}
          {% if morning_sun %}
            {% set w_netatmo = 0.20 %}
            {% set w_sensibo = 0.80 %}
          {% endif %}
          {% if early_fire %}
            {% set w_netatmo = w_netatmo * 0.7 %}
            {% set w_sensibo = w_sensibo * 1.1 %}
          {% endif %}

          {# Normaliser #}
          {% set wsum = w_netatmo + w_sensibo %}
          {% set w_netatmo = w_netatmo / wsum %}
          {% set w_sensibo = w_sensibo / wsum %}

          {# Resultat (ingen avrunding -> jevnere graf) #}
          {% if diff > 3 %}
            {{ ((netatmo + sensibo) / 2) }}
          {% else %}
            {{ (w_netatmo * netatmo + w_sensibo * sensibo) }}
          {% endif %}
        attributes:
          netatmo_in: "{{ states('sensor.tjukktommern_inne_temperatur') }}"
          sensibo_in: "{{ states('sensor.tjukktommern_motion_sensor_temperatur') }}"
          netatmo_used: "{{ states('sensor.stue_netatmo_30_min_snitt') or states('sensor.tjukktommern_inne_temperatur') }}"
          sensibo_used: "{{ states('sensor.stue_sensibo_30_min_snitt') or states('sensor.tjukktommern_motion_sensor_temperatur') }}"
          diff_abs: >
            {{ ((states('sensor.tjukktommern_inne_temperatur')|float(0)) -
                (states('sensor.tjukktommern_motion_sensor_temperatur')|float(0))) | abs | round(2) }}
          sensibo_slope_c_per_h: "{{ states('sensor.stue_sensibo_stigningshastighet') }}"
          morning_sun: "{{ (7 <= now().hour <= 11) and (state_attr('sun.sun','elevation')|float(-90) > 5) }}"
          weights: >
            {%- set sun_elev = state_attr('sun.sun','elevation') | float(-90) -%}
            {%- set hour = now().hour -%}
            {%- set morning_sun = (7 <= hour <= 11) and (sun_elev > 5) -%}
            {%- set slope = states('sensor.stue_sensibo_stigningshastighet') | float(0) -%}
            {%- set early_fire = slope >= 1.0 -%}
            {%- set wn = 0.35 -%}
            {%- set ws = 0.65 -%}
            {%- if morning_sun -%}
              {%- set wn = 0.20 -%}
              {%- set ws = 0.80 -%}
            {%- endif -%}
            {%- if early_fire -%}
              {%- set wn = wn * 0.7 -%}
              {%- set ws = ws * 1.1 -%}
            {%- endif -%}
            {%- set wsum = wn + ws -%}
            {{ {'netatmo': (wn/wsum)|round(2), 'sensibo': (ws/wsum)|round(2)} }}

# --------------------------- PLATFORM-SENSORER ---------------------------
sensor:
  # --- Glatting (30 min) -> STATE = mean ---
  - platform: statistics
    name: "Stue Netatmo (30 min snitt)"
    entity_id: sensor.tjukktommern_inne_temperatur
    max_age:
      minutes: 30
    precision: 3
    state_characteristic: mean

  - platform: statistics
    name: "Stue Sensibo (30 min snitt)"
    entity_id: sensor.tjukktommern_motion_sensor_temperatur
    max_age:
      minutes: 30
    precision: 3
    state_characteristic: mean

  # --- Rask stigning (°C/h) for å detektere tidlig ovnsfyring ---
  - platform: derivative
    name: "Stue Sensibo stigningshastighet"
    source: sensor.tjukktommern_motion_sensor_temperatur
    unit_time: h
    time_window: "00:15:00"
    round: 2
